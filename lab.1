1. Caesar Cipher 

ciphertext = "Hvs Eiwqy Pfckb Tcl Xiadg Cjsf Hvs Zonm Rcu."
def caesar_decrypt(text, shift):
    result = ""
    for char in text:
        if char.isalpha():
            base = ord('A') if char.isupper() else ord('a')
            result += chr((ord(char) - base - shift) % 26 + base)
        else:
            result += char
    return result
for shift in range(26):
    print(f"Shift {shift}: {caesar_decrypt(ciphertext, shift)}")



2. XOR Encryption/Decryption

import base64
def caesar_decrypt(text, shift):
    out = []
    for ch in text:
        if ch.isalpha():
            base = ord('A') if ch.isupper() else ord('a')
            out.append(chr((ord(ch) - base - shift) % 26 + base))
        else:
            out.append(ch)
    return ''.join(out)
cipher_short = "mznxpz"
print("Caesar brute-force results for:", cipher_short)
for s in range(26):
    print(f"shift {s:2}: {caesar_decrypt(cipher_short, s)}")
print()
decrypted_short = "rescue"   # from shift = 21
passphrase = "secure"
print("Decrypted word:", decrypted_short)
print("Passphrase (anagram rearranged):", passphrase)
print()
b64_ct = "Jw0KBlIMAEUXHRdFKyoxVRENEgkPEBwCFkQ="
cipher_bytes = base64.b64decode(b64_ct)
key = passphrase.encode('utf-8')
plain_bytes = bytes([b ^ key[i % len(key)] for i, b in enumerate(cipher_bytes)])
print("XOR-decrypted plaintext:")
print(plain_bytes.decode('utf-8'))
